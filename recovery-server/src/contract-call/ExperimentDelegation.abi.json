{
  "abi": [
    { "type": "fallback", "stateMutability": "payable" },
    { "type": "receive", "stateMutability": "payable" },
    {
      "type": "function",
      "name": "authorize",
      "inputs": [
        {
          "name": "publicKey",
          "type": "tuple",
          "internalType": "struct ECDSA.PublicKey",
          "components": [
            { "name": "x", "type": "uint256", "internalType": "uint256" },
            { "name": "y", "type": "uint256", "internalType": "uint256" }
          ]
        },
        {
          "name": "keyType",
          "type": "uint8",
          "internalType": "enum ExperimentDelegation.KeyType"
        },
        { "name": "expiry", "type": "uint256", "internalType": "uint256" },
        {
          "name": "signature",
          "type": "tuple",
          "internalType": "struct ECDSA.RecoveredSignature",
          "components": [
            { "name": "r", "type": "uint256", "internalType": "uint256" },
            { "name": "s", "type": "uint256", "internalType": "uint256" },
            { "name": "yParity", "type": "uint8", "internalType": "uint8" }
          ]
        }
      ],
      "outputs": [
        { "name": "publicKeyIndex", "type": "uint32", "internalType": "uint32" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "execute",
      "inputs": [
        { "name": "calls", "type": "bytes", "internalType": "bytes" },
        {
          "name": "signature",
          "type": "tuple",
          "internalType": "struct ECDSA.Signature",
          "components": [
            { "name": "r", "type": "uint256", "internalType": "uint256" },
            { "name": "s", "type": "uint256", "internalType": "uint256" }
          ]
        },
        {
          "name": "metadata",
          "type": "tuple",
          "internalType": "struct WebAuthnP256.Metadata",
          "components": [
            {
              "name": "authenticatorData",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "clientDataJSON",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "challengeIndex",
              "type": "uint16",
              "internalType": "uint16"
            },
            { "name": "typeIndex", "type": "uint16", "internalType": "uint16" },
            {
              "name": "userVerificationRequired",
              "type": "bool",
              "internalType": "bool"
            }
          ]
        },
        {
          "name": "publicKeyIndex",
          "type": "uint32",
          "internalType": "uint32"
        },
        { "name": "prehash", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getLatestKeyIndex",
      "inputs": [],
      "outputs": [
        { "name": "keyIndex", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "keys",
      "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "outputs": [
        { "name": "authorized", "type": "bool", "internalType": "bool" },
        { "name": "expiry", "type": "uint256", "internalType": "uint256" },
        {
          "name": "keyType",
          "type": "uint8",
          "internalType": "enum ExperimentDelegation.KeyType"
        },
        {
          "name": "publicKey",
          "type": "tuple",
          "internalType": "struct ECDSA.PublicKey",
          "components": [
            { "name": "x", "type": "uint256", "internalType": "uint256" },
            { "name": "y", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "multiSend",
      "inputs": [
        { "name": "transactions", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "nonce",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "recoverAccount",
      "inputs": [
        {
          "name": "publicKey",
          "type": "tuple",
          "internalType": "struct ECDSA.PublicKey",
          "components": [
            { "name": "x", "type": "uint256", "internalType": "uint256" },
            { "name": "y", "type": "uint256", "internalType": "uint256" }
          ]
        },
        {
          "name": "keyType",
          "type": "uint8",
          "internalType": "enum ExperimentDelegation.KeyType"
        },
        { "name": "expiry", "type": "uint256", "internalType": "uint256" },
        { "name": "keyIndex", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "revoke",
      "inputs": [
        {
          "name": "publicKeyIndex",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "signature",
          "type": "tuple",
          "internalType": "struct ECDSA.RecoveredSignature",
          "components": [
            { "name": "r", "type": "uint256", "internalType": "uint256" },
            { "name": "s", "type": "uint256", "internalType": "uint256" },
            { "name": "yParity", "type": "uint8", "internalType": "uint8" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    { "type": "error", "name": "AccountNotFound", "inputs": [] },
    { "type": "error", "name": "InvalidAuthority", "inputs": [] },
    { "type": "error", "name": "InvalidSignature", "inputs": [] },
    { "type": "error", "name": "KeyExpired", "inputs": [] },
    { "type": "error", "name": "KeyNotAuthorized", "inputs": [] }
  ],
  "bytecode": {
    "object": "0x608060405234601c57600e6020565b611fae61002b8239611fae90f35b6026565b60405190565b5f80fdfe60806040526004361015610010575b005b61001a5f35610099565b80630cb6aaf11461009457806361040b831461008f578063641cdfe21461008a5780636b23ab2b146100855780638d80ff0a14610080578063a78fc2441461007b578063affed0e0146100765763b34893910361000e576109b0565b61073f565b6106cd565b61063c565b610543565b6104eb565b610448565b610390565b60e01c90565b60405190565b5f80fd5b5f80fd5b5f80fd5b90565b6100bd816100b1565b036100c457565b5f80fd5b905035906100d5826100b4565b565b906020828203126100f0576100ed915f016100c8565b90565b6100a9565b634e487b7160e01b5f52603260045260245ffd5b5490565b5f5260205f2090565b61011f81610109565b8210156101395761013160059161010d565b910201905f90565b6100f5565b5f1c90565b60ff1690565b61015561015a9161013e565b610143565b90565b6101679054610149565b90565b90565b61017961017e9161013e565b61016a565b90565b61018b905461016d565b90565b60ff1690565b6101a06101a59161013e565b61018e565b90565b6101b29054610194565b90565b906101bf906100b1565b9052565b601f801991011690565b634e487b7160e01b5f52604160045260245ffd5b906101eb906101c3565b810190811067ffffffffffffffff82111761020557604052565b6101cd565b9061021d61021661009f565b92836101e1565b565b610229604061020a565b90565b9061026361025a600161023d61021f565b9461025461024c5f8301610181565b5f88016101b5565b01610181565b602084016101b5565b565b5f9061027082610109565b8110156102b65761028091610116565b509061028d5f830161015d565b9161029a60018201610181565b916102b360036102ac600285016101a8565b930161022c565b90565b5f80fd5b151590565b6102c8906102ba565b9052565b6102d5906100b1565b9052565b634e487b7160e01b5f52602160045260245ffd5b600211156102f757565b6102d9565b90610306826102ed565b565b610311906102fc565b90565b61031d90610308565b9052565b61032a906100b1565b9052565b90602080610350936103465f8201515f860190610321565b0151910190610321565b565b61038761038e9461037d60609498979561037360a086019a5f8701906102bf565b60208501906102cc565b6040830190610314565b019061032e565b565b346103c4576103c06103ab6103a63660046100d7565b610265565b906103b794929461009f565b94859485610352565b0390f35b6100a5565b5f80fd5b908160409103126103db5790565b6103c9565b600211156103ea57565b5f80fd5b905035906103fb826103e0565b565b60a08183031261043e57610413825f83016103cd565b9261043b61042484604085016103ee565b9361043281606086016100c8565b936080016100c8565b90565b6100a9565b5f0190565b3461047a5761046461045b3660046103fd565b92919091610c96565b61046c61009f565b8061047681610443565b0390f35b6100a5565b63ffffffff1690565b6104918161047f565b0361049857565b5f80fd5b905035906104a982610488565b565b908160609103126104b95790565b6103c9565b91906080838203126104e657806104da6104e3925f860161049c565b936020016104ab565b90565b6100a9565b3461051a576105046104fe3660046104be565b90610f03565b61050c61009f565b8061051681610443565b0390f35b6100a5565b5f91031261052957565b6100a9565b9190610541905f602085019401906102cc565b565b346105735761055336600461051f565b61056f61055e611099565b61056661009f565b9182918261052e565b0390f35b6100a5565b5f80fd5b5f80fd5b67ffffffffffffffff811161059e5761059a6020916101c3565b0190565b6101cd565b90825f939282370152565b909291926105c36105be82610580565b61020a565b938185526020850190828401116105df576105dd926105a3565b565b61057c565b9080601f83011215610602578160206105ff933591016105ae565b90565b610578565b90602082820312610637575f82013567ffffffffffffffff81116106325761062f92016105e4565b90565b6100ad565b6100a9565b61064f61064a366004610607565b6110c1565b61065761009f565b8061066181610443565b0390f35b60e0818303126106a65761067b825f83016103cd565b926106a361068c84604085016103ee565b9361069a81606086016100c8565b936080016104ab565b90565b6100a9565b6106b49061047f565b9052565b91906106cb905f602085019401906106ab565b565b34610701576106fd6106ec6106e3366004610665565b9291909161119c565b6106f461009f565b918291826106b8565b0390f35b6100a5565b1c90565b61071a90600861071f9302610706565b61016a565b90565b9061072d915461070a565b90565b61073c60015f90610722565b90565b3461076f5761074f36600461051f565b61076b61075a610730565b61076261009f565b9182918261052e565b0390f35b6100a5565b5f80fd5b5f80fd5b91906040838203126107b6576107af90610796604061020a565b936107a3825f83016100c8565b5f8601526020016100c8565b6020830152565b610774565b67ffffffffffffffff81116107d9576107d56020916101c3565b0190565b6101cd565b909291926107f36107ee826107bb565b61020a565b9381855260208501908284011161080f5761080d926105a3565b565b61057c565b9080601f830112156108325781602061082f933591016107de565b90565b610578565b61ffff1690565b61084781610837565b0361084e57565b5f80fd5b9050359061085f8261083e565b565b61086a816102ba565b0361087157565b5f80fd5b9050359061088282610861565b565b91909160a0818403126109255761089b60a061020a565b925f82013567ffffffffffffffff811161092057816108bb9184016105e4565b5f85015260208201359167ffffffffffffffff831161091b576108e382610914948301610814565b60208601526108f58260408301610852565b60408601526109078260608301610852565b6060860152608001610875565b6080830152565b610778565b610778565b610774565b919060c0838203126109ab575f83013567ffffffffffffffff81116109a657816109559185016105e4565b92610963826020830161077c565b92606082013567ffffffffffffffff81116109a1576109878461099e928501610884565b93610995816080860161049c565b9360a001610875565b90565b6100ad565b6100ad565b6100a9565b346109e2576109cc6109c336600461092a565b93929092611497565b6109d461009f565b806109de81610443565b0390f35b6100a5565b5f1b90565b906109f860ff916109e7565b9181191691161790565b610a0b906102ba565b90565b90565b90610a26610a21610a2d92610a02565b610a0e565b82546109ec565b9055565b610a3b608061020a565b90565b90610a48906102ba565b9052565b90610a56906102fc565b9052565b9190604083820312610a9457610a8d90610a74604061020a565b93610a81825f83016100c8565b5f8601526020016100c8565b6020830152565b610774565b610aa4903690610a5a565b90565b52565b90565b5f5260205f2090565b5490565b610ac381610ab6565b821015610add57610ad5600591610aad565b910201905f90565b6100f5565b634e487b7160e01b5f525f60045260245ffd5b610aff90516102ba565b90565b610b0c90516100b1565b90565b90610b1b5f19916109e7565b9181191691161790565b90565b610b3c610b37610b41926100b1565b610b25565b6100b1565b90565b90565b90610b5c610b57610b6392610b28565b610b44565b8254610b0f565b9055565b610b7190516102fc565b90565b610b7d906102fc565b90565b90565b90610b98610b93610b9f92610b74565b610b80565b82546109ec565b9055565b5190565b90610bd260206001610bd894610bca5f8201610bc45f8801610b02565b90610b47565b019201610b02565b90610b47565b565b90610be491610ba7565b565b90610c4360606003610c4994610c095f8201610c035f8801610af5565b90610a11565b610c2260018201610c1c60208801610b02565b90610b47565b610c3b60028201610c3560408801610b67565b90610b83565b019201610ba3565b90610bda565b565b9190610c5c57610c5a91610be6565b565b610ae2565b9081549168010000000000000000831015610c915782610c89916001610c8f95018155610aba565b90610c4b565b565b6101cd565b610cf891610cea610cef92610cbb610d06975f610cb4819282610116565b5001610a11565b610ce1600196939193610cd8610ccf610a31565b985f8a01610a3e565b602088016101b5565b60408601610a4c565b610a99565b60608301610aa7565b610d015f610aaa565b610c61565b565b634e487b7160e01b5f52601160045260245ffd5b610d25906100b1565b5f198114610d335760010190565b610d08565b90565b610d47610d4c916100b1565b610d38565b9052565b60e01b90565b610d5f90610d50565b90565b610d6e610d739161047f565b610d56565b9052565b602081610d8a610d929360049695610d3b565b018092610d62565b0190565b60200190565b5190565b60ff1690565b610daf81610da0565b03610db657565b5f80fd5b35610dc481610da6565b90565b90565b610dde610dd9610de392610dc7565b610b25565b610da0565b90565b90565b610dfd610df8610e0292610de6565b610b25565b610da0565b90565b90565b610e1c610e17610e2192610e05565b610b25565b610da0565b90565b35610e2e816100b4565b90565b90565b610e48610e43610e4d926100b1565b6109e7565b610e31565b90565b610e5990610e31565b9052565b610e6690610da0565b9052565b610e9f610ea694610e95606094989795610e8b608086019a5f870190610e50565b6020850190610e5d565b6040830190610e50565b0190610e50565b565b610eb061009f565b3d5f823e3d90fd5b60018060a01b031690565b610ed7610ed2610edc92610eb8565b610b25565b610eb8565b90565b610ee890610ec3565b90565b610ef490610edf565b90565b610f0090610eb8565b90565b905f602091610f126001610181565b610f25610f1e82610d1c565b6001610b47565b610f4e8591610f40610f3561009f565b938492888401610d77565b8682018103825203826101e1565b610f60610f5a82610d9c565b91610d96565b20610f6d60408301610dba565b610f7f610f7985610dca565b91610da0565b14831461103e57610fcd610f93601b610e08565b925b610fbb610fb687610faf610faa898601610e24565b610e34565b9301610e24565b610e34565b90610fc461009f565b94859485610e6a565b838052039060015afa1561103957610fe55f516109e7565b610fff610ff9610ff430610eeb565b610ef7565b91610ef7565b0361101d5761101b905f611014819282610116565b5001610a11565b565b5f638baa579f60e01b81528061103560048201610443565b0390fd5b610ea8565b610fcd61104b601c610de9565b92610f95565b5f90565b90565b61106c61106761107192611055565b610b25565b6100b1565b90565b611083611089919392936100b1565b926100b1565b820391821161109457565b610d08565b6110a1611051565b506110be6110ae5f610109565b6110b86001611058565b90611074565b90565b80519060205b8281106110d357505050565b8082015160f81c6001820183015160601c308115021760158301840151916035840185015192836055860187015f9392835f146111335750505090915060011461112f575b5f1461112757605501016110c7565b3d5f803e3d5ffd5b5f80fd5b5f958695508594505af19050611118565b5f90565b92611174602061117c9461116c8288611164829b9a8399610d3b565b018092610d3b565b018092610d3b565b018092610d3b565b0190565b61119461118f611199926100b1565b610b25565b61047f565b90565b925f6020916111a9611144565b506111b46001610181565b6111c76111c082610d1c565b6001610b47565b6112076111d5848901610e24565b916111f96111e4878b01610e24565b89906111ee61009f565b9586948a8601611148565b8682018103825203826101e1565b61121961121382610d9c565b91610d96565b2061122660408301610dba565b61123861123285610dca565b91610da0565b14831461135e5761128661124c601b610e08565b925b61127461126f87611268611263898601610e24565b610e34565b9301610e24565b610e34565b9061127d61009f565b94859485610e6a565b838052039060015afa156113595761129e5f516109e7565b6112b86112b26112ad30610eeb565b610ef7565b91610ef7565b0361133d576112ff611308916112fa611316956112f16001969391936112e86112df610a31565b985f8a01610a3e565b602088016101b5565b60408601610a4c565b610a99565b60608301610aa7565b6113115f610aaa565b610c61565b61133a6113356113255f610109565b61132f6001611058565b90611074565b611180565b90565b5f638baa579f60e01b81528061135560048201610443565b0390fd5b610ea8565b61128661136b601c610de9565b9261124e565b905090565b90825f9392825e0152565b6113a661139d9260209261139481610d9c565b94858093611371565b93849101611376565b0190565b806113bb6020926113c29594610d3b565b0190611381565b90565b90565b6113d46113d991610e31565b6113c5565b9052565b6113e9816020936113c8565b0190565b6113f691611381565b90565b611403608061020a565b90565b9061146d61146460036114176113f9565b9461142e6114265f830161015d565b5f8801610a3e565b61144661143d60018301610181565b602088016101b5565b61145e611455600283016101a8565b60408801610a4c565b0161022c565b60608401610aa7565b565b61147890611406565b90565b61148f61148a61149492610dc7565b610b25565b6100b1565b90565b939190926114a56001610181565b6114b86114b182610d1c565b6001610b47565b6114e386916114d46114c861009f565b938492602084016113aa565b602082018103825203826101e1565b6114f56114ef82610d9c565b91610d96565b20926115f3575b61150961150f915f610116565b5061146f565b61152361151d5f8301610af5565b156102ba565b6115d75761153360208201610b02565b61154561153f5f61147b565b916100b1565b11806115b2575b6115965761156b93606061156594939192015192611816565b156102ba565b61157a57611578906110c1565b565b5f638baa579f60e01b81528061159260048201610443565b0390fd5b5f632572e3a960e01b8152806115ae60048201610443565b0390fd5b506115bf60208201610b02565b6115d16115cb426100b1565b916100b1565b1061154c565b5f637dd286d760e11b8152806115ef60048201610443565b0390fd5b915f61163361161461162260209461160961009f565b9283918783016113dd565b8682018103825203826101e1565b61162a61009f565b918291826113ed565b039060025afa156116575761150f61150961164e5f516109e7565b939150506114fc565b610ea8565b5f90565b90565b61167761167261167c92611660565b610b25565b6100b1565b90565b9061168982610d9c565b81101561169b57600160209102010190565b6100f5565b90565b6116b76116b26116bc926116a0565b610b25565b6100b1565b90565b60ff60f81b1690565b6116d290516116bf565b90565b906116e76116e2836107bb565b61020a565b918252565b5f74113a3cb832911d113bb2b130baba34371733b2ba1160591b910152565b61171560156116d5565b90611722602083016116ec565b565b61172c61170b565b90565b6117399051610837565b90565b61175061174b61175592610837565b610b25565b6100b1565b90565b6c1131b430b63632b733b2911d1160991b9052565b5190565b905090565b61179b611792926020926117898161176d565b94858093611771565b93849101611376565b0190565b601160f91b9052565b600191600d6117c1926117ba81611758565b0190611776565b6117ca8161179f565b0190565b906117f66117da61009f565b80936117ea6020830191826117a8565b908103825203836101e1565b565b90565b61180b6118129160209493611381565b80926113c8565b0190565b61181e61165c565b5061182b5f830151610d9c565b61183e6118386025611663565b916100b1565b1080156119ae575b6119a65761187d611877611858611724565b602085015161187161186c6060880161172f565b61173c565b91611baa565b156102ba565b61199e576118e46118c56118c06118a86118b76118ea9561189c61009f565b928391602083016113dd565b602082018103825203826101e1565b60018091611c9a565b6117ce565b60208401516118de6118d96040870161172f565b61173c565b91611baa565b156102ba565b6119975760205f611911611900838501516117f8565b61190861009f565b918291826113ed565b039060025afa15611992575f6119696020926119588361193181516109e7565b92015161194a61193f61009f565b9384928884016117fb565b8682018103825203826101e1565b61196061009f565b918291826113ed565b039060025afa1561198d5761198a916119825f516109e7565b919091611e87565b90565b610ea8565b610ea8565b5050505f90565b505050505f90565b505050505f90565b506119ec6119e66119d46119cf5f8601516119c960206116a3565b9061167f565b6116c8565b6119e060808601610af5565b90611aa4565b156102ba565b611846565b60f81b90565b611a0b611a06611a1092611055565b6119f1565b6116bf565b90565b611a1d60016119f7565b90565b90565b611a37611a32611a3c92611a20565b6119f1565b6116bf565b90565b611a496004611a23565b90565b90565b611a63611a5e611a6892611a4c565b6119f1565b6116bf565b90565b611a756008611a4f565b90565b90565b611a8f611a8a611a9492611a78565b6119f1565b6116bf565b90565b611aa16010611a7b565b90565b90611aad61165c565b5081611ab7611a13565b16611ad1611acb611ac6611a13565b6116bf565b916116bf565b03611b705780611b45575b611b405780611ae9611a6b565b16611b03611afd611af8611a6b565b6116bf565b916116bf565b03611b0f575b50600190565b611b17611a97565b16611b31611b2b611b26611a97565b6116bf565b916116bf565b14611b3c575f611b09565b5f90565b505f90565b5080611b4f611a3f565b16611b69611b63611b5e611a3f565b6116bf565b916116bf565b1415611adc565b50505f90565b6001611b8291016100b1565b90565b611b94611b9a919392936100b1565b926100b1565b8201809211611ba557565b610d08565b611bc2611bc891939293611bbc61165c565b506117f8565b926117f8565b90611bd283610d9c565b92611bdc83610d9c565b611be55f61147b565b5b80611bf9611bf3886100b1565b916100b1565b1015611c8a57611c0a848290611b85565b611c1c611c16846100b1565b916100b1565b1015611c8057611c35611c3084839061167f565b6116c8565b611c63611c5d611c58611c5389611c4d8a8890611b85565b9061167f565b6116c8565b6116bf565b916116bf565b03611c7657611c7190611b76565b611be6565b5050505050505f90565b5050505050505f90565b505050505050600190565b606090565b929192611ca5611c95565b93815180611cb4575b50505050565b90919294506003600282010460021b91610670604051967f4142434445464748494a4b4c4d4e4f505152535455565758595a616263646566601f5215027f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f18603f5260208601938385019280826020010195600460038851945f8a525b0191603f8351818160121c16515f538181600c1c1651600153818160061c165160025316516003535f518152019085821015611d7a5790603f6003600493909150929192611d31565b50955f9460039360209252016040520660020490613d3d60f01b82860352151502809303520382525f808080611cae565b90565b611dc2611dbd611dc792611dab565b610b25565b610eb8565b90565b611dd390611dae565b90565b90959492611e2194611e10611e1a92611e06608096611dfc60a088019c5f890190610e50565b60208701906102cc565b60408501906102cc565b60608301906102cc565b01906102cc565b565b90611e35611e3083610580565b61020a565b918252565b606090565b3d5f14611e5a57611e4f3d611e23565b903d5f602084013e5b565b611e62611e3a565b90611e58565b90565b611e7f611e7a611e8492611e68565b610b25565b6100b1565b90565b5f9291611efa8493611e9761165c565b50611eeb611ea56014611dca565b9491611ebe6020611eb7898801610b02565b9601610b02565b90611ed66020611ecf8a8401610b02565b9201610b02565b91611edf61009f565b96879560208701611dd6565b602082018103825203826101e1565b602081019051915afa611f0b611e3f565b9080611f55575b9081611f1d575b5090565b611f3b9150611f3690611f30601f611e6b565b9061167f565b6116c8565b611f4e611f4860016119f7565b916116bf565b145f611f19565b50611f5f81610d9c565b611f72611f6c60206116a3565b916100b1565b14611f1256fea264697066735822122057687952d9cbbbd73b45d075a6dfe98ae915578291495237bfd4211052ba60a864736f6c634300081c0033",
    "sourceMap": "526:5524:1:-:0;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361015610010575b005b61001a5f35610099565b80630cb6aaf11461009457806361040b831461008f578063641cdfe21461008a5780636b23ab2b146100855780638d80ff0a14610080578063a78fc2441461007b578063affed0e0146100765763b34893910361000e576109b0565b61073f565b6106cd565b61063c565b610543565b6104eb565b610448565b610390565b60e01c90565b60405190565b5f80fd5b5f80fd5b5f80fd5b90565b6100bd816100b1565b036100c457565b5f80fd5b905035906100d5826100b4565b565b906020828203126100f0576100ed915f016100c8565b90565b6100a9565b634e487b7160e01b5f52603260045260245ffd5b5490565b5f5260205f2090565b61011f81610109565b8210156101395761013160059161010d565b910201905f90565b6100f5565b5f1c90565b60ff1690565b61015561015a9161013e565b610143565b90565b6101679054610149565b90565b90565b61017961017e9161013e565b61016a565b90565b61018b905461016d565b90565b60ff1690565b6101a06101a59161013e565b61018e565b90565b6101b29054610194565b90565b906101bf906100b1565b9052565b601f801991011690565b634e487b7160e01b5f52604160045260245ffd5b906101eb906101c3565b810190811067ffffffffffffffff82111761020557604052565b6101cd565b9061021d61021661009f565b92836101e1565b565b610229604061020a565b90565b9061026361025a600161023d61021f565b9461025461024c5f8301610181565b5f88016101b5565b01610181565b602084016101b5565b565b5f9061027082610109565b8110156102b65761028091610116565b509061028d5f830161015d565b9161029a60018201610181565b916102b360036102ac600285016101a8565b930161022c565b90565b5f80fd5b151590565b6102c8906102ba565b9052565b6102d5906100b1565b9052565b634e487b7160e01b5f52602160045260245ffd5b600211156102f757565b6102d9565b90610306826102ed565b565b610311906102fc565b90565b61031d90610308565b9052565b61032a906100b1565b9052565b90602080610350936103465f8201515f860190610321565b0151910190610321565b565b61038761038e9461037d60609498979561037360a086019a5f8701906102bf565b60208501906102cc565b6040830190610314565b019061032e565b565b346103c4576103c06103ab6103a63660046100d7565b610265565b906103b794929461009f565b94859485610352565b0390f35b6100a5565b5f80fd5b908160409103126103db5790565b6103c9565b600211156103ea57565b5f80fd5b905035906103fb826103e0565b565b60a08183031261043e57610413825f83016103cd565b9261043b61042484604085016103ee565b9361043281606086016100c8565b936080016100c8565b90565b6100a9565b5f0190565b3461047a5761046461045b3660046103fd565b92919091610c96565b61046c61009f565b8061047681610443565b0390f35b6100a5565b63ffffffff1690565b6104918161047f565b0361049857565b5f80fd5b905035906104a982610488565b565b908160609103126104b95790565b6103c9565b91906080838203126104e657806104da6104e3925f860161049c565b936020016104ab565b90565b6100a9565b3461051a576105046104fe3660046104be565b90610f03565b61050c61009f565b8061051681610443565b0390f35b6100a5565b5f91031261052957565b6100a9565b9190610541905f602085019401906102cc565b565b346105735761055336600461051f565b61056f61055e611099565b61056661009f565b9182918261052e565b0390f35b6100a5565b5f80fd5b5f80fd5b67ffffffffffffffff811161059e5761059a6020916101c3565b0190565b6101cd565b90825f939282370152565b909291926105c36105be82610580565b61020a565b938185526020850190828401116105df576105dd926105a3565b565b61057c565b9080601f83011215610602578160206105ff933591016105ae565b90565b610578565b90602082820312610637575f82013567ffffffffffffffff81116106325761062f92016105e4565b90565b6100ad565b6100a9565b61064f61064a366004610607565b6110c1565b61065761009f565b8061066181610443565b0390f35b60e0818303126106a65761067b825f83016103cd565b926106a361068c84604085016103ee565b9361069a81606086016100c8565b936080016104ab565b90565b6100a9565b6106b49061047f565b9052565b91906106cb905f602085019401906106ab565b565b34610701576106fd6106ec6106e3366004610665565b9291909161119c565b6106f461009f565b918291826106b8565b0390f35b6100a5565b1c90565b61071a90600861071f9302610706565b61016a565b90565b9061072d915461070a565b90565b61073c60015f90610722565b90565b3461076f5761074f36600461051f565b61076b61075a610730565b61076261009f565b9182918261052e565b0390f35b6100a5565b5f80fd5b5f80fd5b91906040838203126107b6576107af90610796604061020a565b936107a3825f83016100c8565b5f8601526020016100c8565b6020830152565b610774565b67ffffffffffffffff81116107d9576107d56020916101c3565b0190565b6101cd565b909291926107f36107ee826107bb565b61020a565b9381855260208501908284011161080f5761080d926105a3565b565b61057c565b9080601f830112156108325781602061082f933591016107de565b90565b610578565b61ffff1690565b61084781610837565b0361084e57565b5f80fd5b9050359061085f8261083e565b565b61086a816102ba565b0361087157565b5f80fd5b9050359061088282610861565b565b91909160a0818403126109255761089b60a061020a565b925f82013567ffffffffffffffff811161092057816108bb9184016105e4565b5f85015260208201359167ffffffffffffffff831161091b576108e382610914948301610814565b60208601526108f58260408301610852565b60408601526109078260608301610852565b6060860152608001610875565b6080830152565b610778565b610778565b610774565b919060c0838203126109ab575f83013567ffffffffffffffff81116109a657816109559185016105e4565b92610963826020830161077c565b92606082013567ffffffffffffffff81116109a1576109878461099e928501610884565b93610995816080860161049c565b9360a001610875565b90565b6100ad565b6100ad565b6100a9565b346109e2576109cc6109c336600461092a565b93929092611497565b6109d461009f565b806109de81610443565b0390f35b6100a5565b5f1b90565b906109f860ff916109e7565b9181191691161790565b610a0b906102ba565b90565b90565b90610a26610a21610a2d92610a02565b610a0e565b82546109ec565b9055565b610a3b608061020a565b90565b90610a48906102ba565b9052565b90610a56906102fc565b9052565b9190604083820312610a9457610a8d90610a74604061020a565b93610a81825f83016100c8565b5f8601526020016100c8565b6020830152565b610774565b610aa4903690610a5a565b90565b52565b90565b5f5260205f2090565b5490565b610ac381610ab6565b821015610add57610ad5600591610aad565b910201905f90565b6100f5565b634e487b7160e01b5f525f60045260245ffd5b610aff90516102ba565b90565b610b0c90516100b1565b90565b90610b1b5f19916109e7565b9181191691161790565b90565b610b3c610b37610b41926100b1565b610b25565b6100b1565b90565b90565b90610b5c610b57610b6392610b28565b610b44565b8254610b0f565b9055565b610b7190516102fc565b90565b610b7d906102fc565b90565b90565b90610b98610b93610b9f92610b74565b610b80565b82546109ec565b9055565b5190565b90610bd260206001610bd894610bca5f8201610bc45f8801610b02565b90610b47565b019201610b02565b90610b47565b565b90610be491610ba7565b565b90610c4360606003610c4994610c095f8201610c035f8801610af5565b90610a11565b610c2260018201610c1c60208801610b02565b90610b47565b610c3b60028201610c3560408801610b67565b90610b83565b019201610ba3565b90610bda565b565b9190610c5c57610c5a91610be6565b565b610ae2565b9081549168010000000000000000831015610c915782610c89916001610c8f95018155610aba565b90610c4b565b565b6101cd565b610cf891610cea610cef92610cbb610d06975f610cb4819282610116565b5001610a11565b610ce1600196939193610cd8610ccf610a31565b985f8a01610a3e565b602088016101b5565b60408601610a4c565b610a99565b60608301610aa7565b610d015f610aaa565b610c61565b565b634e487b7160e01b5f52601160045260245ffd5b610d25906100b1565b5f198114610d335760010190565b610d08565b90565b610d47610d4c916100b1565b610d38565b9052565b60e01b90565b610d5f90610d50565b90565b610d6e610d739161047f565b610d56565b9052565b602081610d8a610d929360049695610d3b565b018092610d62565b0190565b60200190565b5190565b60ff1690565b610daf81610da0565b03610db657565b5f80fd5b35610dc481610da6565b90565b90565b610dde610dd9610de392610dc7565b610b25565b610da0565b90565b90565b610dfd610df8610e0292610de6565b610b25565b610da0565b90565b90565b610e1c610e17610e2192610e05565b610b25565b610da0565b90565b35610e2e816100b4565b90565b90565b610e48610e43610e4d926100b1565b6109e7565b610e31565b90565b610e5990610e31565b9052565b610e6690610da0565b9052565b610e9f610ea694610e95606094989795610e8b608086019a5f870190610e50565b6020850190610e5d565b6040830190610e50565b0190610e50565b565b610eb061009f565b3d5f823e3d90fd5b60018060a01b031690565b610ed7610ed2610edc92610eb8565b610b25565b610eb8565b90565b610ee890610ec3565b90565b610ef490610edf565b90565b610f0090610eb8565b90565b905f602091610f126001610181565b610f25610f1e82610d1c565b6001610b47565b610f4e8591610f40610f3561009f565b938492888401610d77565b8682018103825203826101e1565b610f60610f5a82610d9c565b91610d96565b20610f6d60408301610dba565b610f7f610f7985610dca565b91610da0565b14831461103e57610fcd610f93601b610e08565b925b610fbb610fb687610faf610faa898601610e24565b610e34565b9301610e24565b610e34565b90610fc461009f565b94859485610e6a565b838052039060015afa1561103957610fe55f516109e7565b610fff610ff9610ff430610eeb565b610ef7565b91610ef7565b0361101d5761101b905f611014819282610116565b5001610a11565b565b5f638baa579f60e01b81528061103560048201610443565b0390fd5b610ea8565b610fcd61104b601c610de9565b92610f95565b5f90565b90565b61106c61106761107192611055565b610b25565b6100b1565b90565b611083611089919392936100b1565b926100b1565b820391821161109457565b610d08565b6110a1611051565b506110be6110ae5f610109565b6110b86001611058565b90611074565b90565b80519060205b8281106110d357505050565b8082015160f81c6001820183015160601c308115021760158301840151916035840185015192836055860187015f9392835f146111335750505090915060011461112f575b5f1461112757605501016110c7565b3d5f803e3d5ffd5b5f80fd5b5f958695508594505af19050611118565b5f90565b92611174602061117c9461116c8288611164829b9a8399610d3b565b018092610d3b565b018092610d3b565b018092610d3b565b0190565b61119461118f611199926100b1565b610b25565b61047f565b90565b925f6020916111a9611144565b506111b46001610181565b6111c76111c082610d1c565b6001610b47565b6112076111d5848901610e24565b916111f96111e4878b01610e24565b89906111ee61009f565b9586948a8601611148565b8682018103825203826101e1565b61121961121382610d9c565b91610d96565b2061122660408301610dba565b61123861123285610dca565b91610da0565b14831461135e5761128661124c601b610e08565b925b61127461126f87611268611263898601610e24565b610e34565b9301610e24565b610e34565b9061127d61009f565b94859485610e6a565b838052039060015afa156113595761129e5f516109e7565b6112b86112b26112ad30610eeb565b610ef7565b91610ef7565b0361133d576112ff611308916112fa611316956112f16001969391936112e86112df610a31565b985f8a01610a3e565b602088016101b5565b60408601610a4c565b610a99565b60608301610aa7565b6113115f610aaa565b610c61565b61133a6113356113255f610109565b61132f6001611058565b90611074565b611180565b90565b5f638baa579f60e01b81528061135560048201610443565b0390fd5b610ea8565b61128661136b601c610de9565b9261124e565b905090565b90825f9392825e0152565b6113a661139d9260209261139481610d9c565b94858093611371565b93849101611376565b0190565b806113bb6020926113c29594610d3b565b0190611381565b90565b90565b6113d46113d991610e31565b6113c5565b9052565b6113e9816020936113c8565b0190565b6113f691611381565b90565b611403608061020a565b90565b9061146d61146460036114176113f9565b9461142e6114265f830161015d565b5f8801610a3e565b61144661143d60018301610181565b602088016101b5565b61145e611455600283016101a8565b60408801610a4c565b0161022c565b60608401610aa7565b565b61147890611406565b90565b61148f61148a61149492610dc7565b610b25565b6100b1565b90565b939190926114a56001610181565b6114b86114b182610d1c565b6001610b47565b6114e386916114d46114c861009f565b938492602084016113aa565b602082018103825203826101e1565b6114f56114ef82610d9c565b91610d96565b20926115f3575b61150961150f915f610116565b5061146f565b61152361151d5f8301610af5565b156102ba565b6115d75761153360208201610b02565b61154561153f5f61147b565b916100b1565b11806115b2575b6115965761156b93606061156594939192015192611816565b156102ba565b61157a57611578906110c1565b565b5f638baa579f60e01b81528061159260048201610443565b0390fd5b5f632572e3a960e01b8152806115ae60048201610443565b0390fd5b506115bf60208201610b02565b6115d16115cb426100b1565b916100b1565b1061154c565b5f637dd286d760e11b8152806115ef60048201610443565b0390fd5b915f61163361161461162260209461160961009f565b9283918783016113dd565b8682018103825203826101e1565b61162a61009f565b918291826113ed565b039060025afa156116575761150f61150961164e5f516109e7565b939150506114fc565b610ea8565b5f90565b90565b61167761167261167c92611660565b610b25565b6100b1565b90565b9061168982610d9c565b81101561169b57600160209102010190565b6100f5565b90565b6116b76116b26116bc926116a0565b610b25565b6100b1565b90565b60ff60f81b1690565b6116d290516116bf565b90565b906116e76116e2836107bb565b61020a565b918252565b5f74113a3cb832911d113bb2b130baba34371733b2ba1160591b910152565b61171560156116d5565b90611722602083016116ec565b565b61172c61170b565b90565b6117399051610837565b90565b61175061174b61175592610837565b610b25565b6100b1565b90565b6c1131b430b63632b733b2911d1160991b9052565b5190565b905090565b61179b611792926020926117898161176d565b94858093611771565b93849101611376565b0190565b601160f91b9052565b600191600d6117c1926117ba81611758565b0190611776565b6117ca8161179f565b0190565b906117f66117da61009f565b80936117ea6020830191826117a8565b908103825203836101e1565b565b90565b61180b6118129160209493611381565b80926113c8565b0190565b61181e61165c565b5061182b5f830151610d9c565b61183e6118386025611663565b916100b1565b1080156119ae575b6119a65761187d611877611858611724565b602085015161187161186c6060880161172f565b61173c565b91611baa565b156102ba565b61199e576118e46118c56118c06118a86118b76118ea9561189c61009f565b928391602083016113dd565b602082018103825203826101e1565b60018091611c9a565b6117ce565b60208401516118de6118d96040870161172f565b61173c565b91611baa565b156102ba565b6119975760205f611911611900838501516117f8565b61190861009f565b918291826113ed565b039060025afa15611992575f6119696020926119588361193181516109e7565b92015161194a61193f61009f565b9384928884016117fb565b8682018103825203826101e1565b61196061009f565b918291826113ed565b039060025afa1561198d5761198a916119825f516109e7565b919091611e87565b90565b610ea8565b610ea8565b5050505f90565b505050505f90565b505050505f90565b506119ec6119e66119d46119cf5f8601516119c960206116a3565b9061167f565b6116c8565b6119e060808601610af5565b90611aa4565b156102ba565b611846565b60f81b90565b611a0b611a06611a1092611055565b6119f1565b6116bf565b90565b611a1d60016119f7565b90565b90565b611a37611a32611a3c92611a20565b6119f1565b6116bf565b90565b611a496004611a23565b90565b90565b611a63611a5e611a6892611a4c565b6119f1565b6116bf565b90565b611a756008611a4f565b90565b90565b611a8f611a8a611a9492611a78565b6119f1565b6116bf565b90565b611aa16010611a7b565b90565b90611aad61165c565b5081611ab7611a13565b16611ad1611acb611ac6611a13565b6116bf565b916116bf565b03611b705780611b45575b611b405780611ae9611a6b565b16611b03611afd611af8611a6b565b6116bf565b916116bf565b03611b0f575b50600190565b611b17611a97565b16611b31611b2b611b26611a97565b6116bf565b916116bf565b14611b3c575f611b09565b5f90565b505f90565b5080611b4f611a3f565b16611b69611b63611b5e611a3f565b6116bf565b916116bf565b1415611adc565b50505f90565b6001611b8291016100b1565b90565b611b94611b9a919392936100b1565b926100b1565b8201809211611ba557565b610d08565b611bc2611bc891939293611bbc61165c565b506117f8565b926117f8565b90611bd283610d9c565b92611bdc83610d9c565b611be55f61147b565b5b80611bf9611bf3886100b1565b916100b1565b1015611c8a57611c0a848290611b85565b611c1c611c16846100b1565b916100b1565b1015611c8057611c35611c3084839061167f565b6116c8565b611c63611c5d611c58611c5389611c4d8a8890611b85565b9061167f565b6116c8565b6116bf565b916116bf565b03611c7657611c7190611b76565b611be6565b5050505050505f90565b5050505050505f90565b505050505050600190565b606090565b929192611ca5611c95565b93815180611cb4575b50505050565b90919294506003600282010460021b91610670604051967f4142434445464748494a4b4c4d4e4f505152535455565758595a616263646566601f5215027f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f18603f5260208601938385019280826020010195600460038851945f8a525b0191603f8351818160121c16515f538181600c1c1651600153818160061c165160025316516003535f518152019085821015611d7a5790603f6003600493909150929192611d31565b50955f9460039360209252016040520660020490613d3d60f01b82860352151502809303520382525f808080611cae565b90565b611dc2611dbd611dc792611dab565b610b25565b610eb8565b90565b611dd390611dae565b90565b90959492611e2194611e10611e1a92611e06608096611dfc60a088019c5f890190610e50565b60208701906102cc565b60408501906102cc565b60608301906102cc565b01906102cc565b565b90611e35611e3083610580565b61020a565b918252565b606090565b3d5f14611e5a57611e4f3d611e23565b903d5f602084013e5b565b611e62611e3a565b90611e58565b90565b611e7f611e7a611e8492611e68565b610b25565b6100b1565b90565b5f9291611efa8493611e9761165c565b50611eeb611ea56014611dca565b9491611ebe6020611eb7898801610b02565b9601610b02565b90611ed66020611ecf8a8401610b02565b9201610b02565b91611edf61009f565b96879560208701611dd6565b602082018103825203826101e1565b602081019051915afa611f0b611e3f565b9080611f55575b9081611f1d575b5090565b611f3b9150611f3690611f30601f611e6b565b9061167f565b6116c8565b611f4e611f4860016119f7565b916116bf565b145f611f19565b50611f5f81610d9c565b611f72611f6c60206116a3565b916100b1565b14611f1256fea264697066735822122057687952d9cbbbd73b45d075a6dfe98ae915578291495237bfd4211052ba60a864736f6c634300081c0033",
    "sourceMap": "526:5524:1:-:0;;;;;;;;;-1:-1:-1;526:5524:1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;:::o;2123:17::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;:::o;:::-;;;;526:5524;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;526:5524:1;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;-1:-1:-1;526:5524:1;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::o;2206:20::-;;;;;;:::i;:::-;;:::o;526:5524::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::o;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::o;:::-;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;:::i;5449:412::-;5751:79;5449:412;5751:79;;5449:412;5661:33;5840:14;5449:412;5661:25;:14;5689:5;5661:4;;:14;:::i;:::-;;:25;:33;:::i;:::-;5751:79;5768:4;5782:6;5799:7;5819:9;5751:79;;;;:::i;:::-;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;5840:9;:4;:9;:::i;:::-;:14;:::i;:::-;5449:412::o;526:5524::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;3569:412::-;;3766:95;;3569:412;3714:7;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;3697:41;3723:14;3697:41;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;3687:52;;;;:::i;:::-;;;:::i;:::-;;3784:17;;:9;:17;;:::i;:::-;:22;;3805:1;3784:22;:::i;:::-;;;:::i;:::-;;:32;;;;3766:95;3784:32;3809:2;3784:32;:::i;:::-;;;3840:20;3848:11;3826:9;3818:20;3826:11;:9;;:11;;:::i;:::-;3818:20;:::i;:::-;3848:9;:11;;:::i;:::-;3840:20;:::i;:::-;3766:95;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;3875:23;;3885:13;3893:4;3885:13;:::i;:::-;3875:23;:::i;:::-;;;:::i;:::-;;3871:54;;3935:39;3969:5;3935:31;:20;3969:5;3935:4;;:20;:::i;:::-;;:31;:39;:::i;:::-;3569:412::o;3871:54::-;3907:18;;;;;;;;;;;;:::i;:::-;;;;3766:95;;:::i;3784:32::-;3766:95;3784:32;3814:2;3784:32;:::i;:::-;;;;526:5524;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;5867:111::-;5917:16;;:::i;:::-;5956:4;:15;:11;:4;:11;:::i;:::-;:15;5970:1;5956:15;:::i;:::-;;;:::i;:::-;5867:111;:::o;1455:2250:3:-;1575:2076;;;;;;;;;;1455:2250;;;:::o;1575:2076::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;526:5524:1;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;2629:672::-;;2963:95;;2629:672;2816:21;;:::i;:::-;2893:7;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;2876:59;2902:11;:9;;:11;;:::i;:::-;2915:9;2876:59;2915:11;:9;;:11;;:::i;:::-;2928:6;2876:59;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;2866:70;;;;:::i;:::-;;;:::i;:::-;;2981:17;;:9;:17;;:::i;:::-;:22;;3002:1;2981:22;:::i;:::-;;;:::i;:::-;;:32;;;;2963:95;2981:32;3006:2;2981:32;:::i;:::-;;;3037:20;3045:11;3023:9;3015:20;3023:11;:9;;:11;;:::i;:::-;3015:20;:::i;:::-;3045:9;:11;;:::i;:::-;3037:20;:::i;:::-;2963:95;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;3072:23;;3082:13;3090:4;3082:13;:::i;:::-;3072:23;:::i;:::-;;;:::i;:::-;;3068:54;;3150:79;;3167:4;3150:79;3239:14;3167:4;3150:79;3167:4;3181:6;3198:7;3218:9;3150:79;;;;:::i;:::-;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;3239:9;:4;:9;:::i;:::-;:14;:::i;:::-;3271:23;3278:15;:11;:4;:11;:::i;:::-;:15;3292:1;3278:15;:::i;:::-;;;:::i;:::-;3271:23;:::i;:::-;3264:30;:::o;3068:54::-;3104:18;3907;;;3104;;;;;;;;:::i;:::-;;;;2963:95;;:::i;2981:32::-;2963:95;2981:32;3011:2;2981:32;:::i;:::-;;;;526:5524;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;4513:695::-;;;;;4770:7;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;4753:32;4779:5;4753:32;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;4743:43;;;;:::i;:::-;;;:::i;:::-;;4800:7;4796:60;;4513:695;4884:20;4867:37;4884:4;;:20;:::i;:::-;;4867:37;:::i;:::-;4918:15;4919:14;;:3;:14;;:::i;:::-;4918:15;;:::i;:::-;4914:46;;4974:10;;:3;:10;;:::i;:::-;:14;;4987:1;4974:14;:::i;:::-;;;:::i;:::-;;:46;;;4513:695;4970:71;;5056:67;5077:9;5109:13;5057:66;5077:9;5088:8;5098:9;5109:3;:13;;5057:66;;:::i;:::-;5056:67;;:::i;:::-;5052:123;;5195:5;;;:::i;:::-;4513:695::o;5052:123::-;5146:18;3907;;;5146;;;;;;;;:::i;:::-;;;;4970:71;5029:12;;;;;;;;;;;;:::i;:::-;;;;4974:46;4992:3;:10;;:3;:10;;:::i;:::-;:28;;5005:15;4992:28;:::i;:::-;;;:::i;:::-;;4974:46;;4914;4942:18;;;;;;;;;;;;:::i;:::-;;;;4796:60;4845:9;4821:35;;4828:27;;4821:35;4845:9;4828:27;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;4821:35;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;4867:37;4884:20;4821:35;;;;:::i;:::-;4796:60;;;;;;4821:35;;:::i;526:5524::-;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::o;:::-;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;:::o;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;5958:1444:5:-;6148:4;;:::i;:::-;6236:8;:33;:26;:8;:26;;:33;:::i;:::-;:38;;6272:2;6236:38;:::i;:::-;;;:::i;:::-;;:140;;;;5958:1444;6219:205;;6566:68;6567:67;6500:52;;:::i;:::-;6590:23;:8;:23;;6567:67;6615:18;;:8;:18;;:::i;:::-;6567:67;:::i;:::-;;;:::i;:::-;6566:68;;:::i;:::-;6562:111;;6938:77;6870:52;6772:54;6786:27;;6937:78;6803:9;6786:27;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;6815:4;6821;6772:54;;:::i;:::-;6870:52;:::i;:::-;6966:23;:8;:23;;6938:77;6991:23;;:8;:23;;:::i;:::-;6938:77;:::i;:::-;;;:::i;:::-;6937:78;;:::i;:::-;6933:121;;7189:38;;;7196:30;7202:8;;:23;;7196:30;:::i;:::-;7189:38;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;7259:72;;;7189:38;7266:64;7189:38;;;;;:::i;:::-;7283:8;:26;;7266:64;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;7259:72;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;7349:46;7259:72;;;;;:::i;:::-;7374:9;7385;7349:46;;:::i;:::-;7342:53;:::o;7259:72::-;;:::i;7189:38::-;;:::i;6933:121::-;7038:5;;;;7031:12;:::o;6562:111::-;6657:5;;;;;6650:12;:::o;6219:205::-;6408:5;;;;;6401:12;:::o;6236:140::-;6310:8;6294:82;6295:81;6310:30;;:26;:8;:26;;:30;6337:2;6310:30;:::i;:::-;;;:::i;:::-;;:::i;:::-;6342:33;;:8;:33;;:::i;:::-;6295:81;;:::i;:::-;6294:82;;:::i;:::-;6236:140;;526:5524:1;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1263:41:5:-;1300:4;;;:::i;:::-;1263:41;:::o;1300:4::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1319:41::-;1356:4;;;:::i;:::-;1319:41;:::o;1356:4::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1375:41::-;1412:4;;;:::i;:::-;1375:41;:::o;1412:4::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1431:41::-;1468:4;;;:::i;:::-;1431:41;:::o;1686:915::-;;1777:4;;:::i;:::-;1868:5;;1876:18;;:::i;:::-;1868:26;:48;;1898:18;;:::i;:::-;1868:48;:::i;:::-;;;:::i;:::-;;1864:91;;2158:77;;;1686:915;2154:120;;2400:5;2408:18;;:::i;:::-;2400:26;:48;;2430:18;;:::i;:::-;2400:48;:::i;:::-;;;:::i;:::-;;2396:177;;1686:915;2590:4;;2583:11;:::o;2396:177::-;2476:18;;:::i;:::-;2468:26;:48;;2498:18;;:::i;:::-;2468:48;:::i;:::-;;;:::i;:::-;;2464:99;;2396:177;;;2464:99;2543:5;2536:12;:::o;2154:120::-;2258:5;;2251:12;:::o;2158:77::-;2186:5;;2194:18;;:::i;:::-;2186:26;2185:50;;2217:18;;:::i;:::-;2185:50;:::i;:::-;;;:::i;:::-;;;2158:77;;1864:91;1939:5;;;1932:12;:::o;526:5524:1:-;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;685:572:5:-;828:13;875:10;685:572;;;;785:4;;:::i;:::-;834:6;828:13;:::i;:::-;881:3;875:10;:::i;:::-;916:11;:18;:11;:18;:::i;:::-;961:8;:15;:8;:15;:::i;:::-;992:13;1004:1;992:13;:::i;:::-;1022:3;1007:1;:13;;1011:9;1007:13;:::i;:::-;;;:::i;:::-;;;;;1045:12;:8;1056:1;1045:12;;:::i;:::-;:22;;1061:6;1045:22;:::i;:::-;;;:::i;:::-;;;1041:73;;1132:14;;:11;1144:1;1132:14;;:::i;:::-;;:::i;:::-;:40;;1150:22;;:8;1159:12;:8;1170:1;1159:12;;:::i;:::-;1150:22;;:::i;:::-;;:::i;:::-;1132:40;:::i;:::-;;;:::i;:::-;;1128:91;;1022:3;;;:::i;:::-;992:13;;1128:91;1199:5;;;;;;;1192:12;:::o;1041:73::-;1094:5;;;;;;;1087:12;:::o;1007:13::-;;;;;;;1246:4;1239:11;:::o;526:5524:1:-;;;:::o;722:2892:0:-;;;;835:20;;:::i;:::-;914:2694;;;;;;722:2892;;;;;:::o;914:2694::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;526:5524:1;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;670:547:4:-;1017:96;670:547;;1042:70;670:547;;817:4;;:::i;:::-;1025;1042:70;1017:13;1025:4;1017:13;:::i;:::-;1053:6;1061:9;1074:11;;1061;:9;;:11;;:::i;:::-;1074:9;:11;;:::i;:::-;1087:9;1100:11;;1087;:9;;:11;;:::i;:::-;1100:9;:11;;:::i;:::-;1042:70;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;1017:96;;;;;;;;;;:::i;:::-;1133:7;:30;;;670:547;1133:52;;;;670:547;1123:62;1196:14;:::o;1133:52::-;1167:10;:6;;:10;:6;:10;1174:2;1167:10;:::i;:::-;;;:::i;:::-;;:::i;:::-;:18;;1181:4;1167:18;:::i;:::-;;;:::i;:::-;;1133:52;;;:30;1144:6;:13;:6;:13;:::i;:::-;:19;;1161:2;1144:19;:::i;:::-;;;:::i;:::-;;1133:30;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "authorize((uint256,uint256),uint8,uint256,(uint256,uint256,uint8))": "a78fc244",
    "execute(bytes,(uint256,uint256),(bytes,string,uint16,uint16,bool),uint32,bool)": "b3489391",
    "getLatestKeyIndex()": "6b23ab2b",
    "keys(uint256)": "0cb6aaf1",
    "multiSend(bytes)": "8d80ff0a",
    "nonce()": "affed0e0",
    "recoverAccount((uint256,uint256),uint8,uint256,uint256)": "61040b83",
    "revoke(uint32,(uint256,uint256,uint8))": "641cdfe2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccountNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAuthority\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"KeyExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"KeyNotAuthorized\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct ECDSA.PublicKey\",\"name\":\"publicKey\",\"type\":\"tuple\"},{\"internalType\":\"enum ExperimentDelegation.KeyType\",\"name\":\"keyType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"s\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"yParity\",\"type\":\"uint8\"}],\"internalType\":\"struct ECDSA.RecoveredSignature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"name\":\"authorize\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"publicKeyIndex\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"calls\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"s\",\"type\":\"uint256\"}],\"internalType\":\"struct ECDSA.Signature\",\"name\":\"signature\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"authenticatorData\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"clientDataJSON\",\"type\":\"string\"},{\"internalType\":\"uint16\",\"name\":\"challengeIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"typeIndex\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"userVerificationRequired\",\"type\":\"bool\"}],\"internalType\":\"struct WebAuthnP256.Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"publicKeyIndex\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"prehash\",\"type\":\"bool\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestKeyIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"keyIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"keys\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"enum ExperimentDelegation.KeyType\",\"name\":\"keyType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct ECDSA.PublicKey\",\"name\":\"publicKey\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"transactions\",\"type\":\"bytes\"}],\"name\":\"multiSend\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct ECDSA.PublicKey\",\"name\":\"publicKey\",\"type\":\"tuple\"},{\"internalType\":\"enum ExperimentDelegation.KeyType\",\"name\":\"keyType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"keyIndex\",\"type\":\"uint256\"}],\"name\":\"recoverAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"publicKeyIndex\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"s\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"yParity\",\"type\":\"uint8\"}],\"internalType\":\"struct ECDSA.RecoveredSignature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"jxom <https://github.com/jxom>\",\"details\":\"WARNING: THIS CONTRACT IS AN EXPERIMENT AND HAS NOT BEEN AUDITED.\",\"kind\":\"dev\",\"methods\":{\"authorize((uint256,uint256),uint8,uint256,(uint256,uint256,uint8))\":{\"params\":{\"expiry\":\"- The Unix timestamp at which the key expires.\",\"keyType\":\"- The type of key. 0 = P256, 1 = WebAuthn-P256, 2 = WebCrypto-P256.\",\"publicKey\":\"- The public key to authorize.\",\"signature\":\"- EOA secp256k1 signature over the public key.\"}},\"execute(bytes,(uint256,uint256),(bytes,string,uint16,uint16,bool),uint32,bool)\":{\"params\":{\"calls\":\"- The calls to execute.\",\"metadata\":\"- The WebAuthn metadata.\",\"prehash\":\"- Whether to SHA-256 hash the digest.\",\"publicKeyIndex\":\"- The index of the authorized public key to use.\",\"signature\":\"- The WebAuthn-wrapped P256 signature over the calls: `p256.sign(keccak256(nonce \\u2016 calls))`.\"}},\"multiSend(bytes)\":{\"details\":\"Sends multiple transactions and reverts all if one fails.\",\"params\":{\"transactions\":\"Encoded transactions. Each transaction is encoded as a packed bytes of                     operation has to be uint8(0) in this version (=> 1 byte),                     to as a address (=> 20 bytes),                     value as a uint256 (=> 32 bytes),                     data length as a uint256 (=> 32 bytes),                     data as bytes.                     see abi.encodePacked for more information on packed encoding\"}},\"recoverAccount((uint256,uint256),uint8,uint256,uint256)\":{\"params\":{\"expiry\":\"Expiry for the new key\",\"keyType\":\"New key type\",\"publicKey\":\"New public key\"}},\"revoke(uint32,(uint256,uint256,uint8))\":{\"params\":{\"publicKeyIndex\":\"- The index of the public key to revoke.\",\"signature\":\"- EOA secp256k1 signature over the public key index.\"}}},\"title\":\"ExperimentDelegation\",\"version\":1},\"userdoc\":{\"errors\":{\"AccountNotFound()\":[{\"notice\":\"Thrown when an address is not found for a nullifier\"}],\"InvalidAuthority()\":[{\"notice\":\"Thrown when the sender is not the Authority.\"}],\"InvalidSignature()\":[{\"notice\":\"Thrown when a signature is invalid.\"}],\"KeyExpired()\":[{\"notice\":\"Thrown when a key is expired.\"}],\"KeyNotAuthorized()\":[{\"notice\":\"Thrown when a key is not authorized.\"}]},\"kind\":\"user\",\"methods\":{\"authorize((uint256,uint256),uint8,uint256,(uint256,uint256,uint8))\":{\"notice\":\"Authorizes a new public key on behalf of the Authority, provided the Authority's signature.\"},\"execute(bytes,(uint256,uint256),(bytes,string,uint16,uint16,bool),uint32,bool)\":{\"notice\":\"Executes a set of calls on behalf of the Authority, provided a WebAuthn-wrapped P256 signature over the calls, the WebAuthn metadata, and an invoker index.\"},\"keys(uint256)\":{\"notice\":\"List of keys associated with the Authority.\"},\"multiSend(bytes)\":{\"notice\":\"The code is for most part the same as the normal MultiSend (to keep compatibility),         but reverts if a transaction tries to use a delegatecall.This method is payable as delegatecalls keep the msg.value from the previous call         If the calling method (e.g. execTransaction) received ETH this would revert otherwise\"},\"nonce()\":{\"notice\":\"Internal nonce used for replay protection.\"},\"recoverAccount((uint256,uint256),uint8,uint256,uint256)\":{\"notice\":\"Verify a self proofIf proof is valid, revoke specified key and authorize new key\"},\"revoke(uint32,(uint256,uint256,uint8))\":{\"notice\":\"Revokes an authorized public key on behalf of the Authority, provided the Authority's signature.\"}},\"notice\":\"Experimental EIP-7702 delegation contract that allows authorized Keys to invoke calls on behalf of an Authority.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ExperimentDelegation.sol\":\"ExperimentDelegation\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\",\":self/=lib/self/\",\":solady/=lib/solady/src/\",\"src:forge-std/=lib/forge-std/src/\",\"src:self/=lib/self/contracts/\",\"src:solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/solady/src/utils/Base64.sol\":{\"keccak256\":\"0x07dcf983a86bc961e4cc0b57a2cfc3e46b20a50fed9b2092c7497e5fe3715a93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65c6c0a8a29cfc5b757abe84635c83e62a177a48c2ad0be24de6b0fba1a60ea2\",\"dweb:/ipfs/QmYuYwxHiBoUt6vaLTLbs2bZamRzqrTfA4BsNZ1TApTfrm\"]},\"src/ExperimentDelegation.sol\":{\"keccak256\":\"0x347a93294d27ef07a838de51cab72c45888c0867d7c1185e4cd13b810e6fef2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a794709ce5db4bc569d71cf769b88a1fe0b55f126791e0f21caebcddbe487c1a\",\"dweb:/ipfs/QmUdF3VRyFf1vRUmZux9JYdaPskXELVavcMXLkQbWhLA2U\"]},\"src/utils/ECDSA.sol\":{\"keccak256\":\"0x14a31e9a4efb985d00c8f4d1f0d4d9a99eef64e88addcf563b0e93a0ddc525fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9fc74e53f36bf2a0f484115dc28006c93716b09ad9b9a33c2034b6a58e0f6feb\",\"dweb:/ipfs/QmTNp1QKavYLKFRpUCKCvLrqPNLf2hmgTFXoVonCfnKEuN\"]},\"src/utils/MultiSend.sol\":{\"keccak256\":\"0x82d9281eb69e1fc9d4c9e418f90a2627ff928c4f7c32e993fd55a68daf999f20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca8e8c7aafe6fb97506e761f8894567ed8206dd45162164cd1b0a3009a298139\",\"dweb:/ipfs/QmcdnPgmU8jPLvPRkbUtnKZjunzG2DWtLKET1mHD5dwM1T\"]},\"src/utils/P256.sol\":{\"keccak256\":\"0xe533cf68650f27bf70511494ac1955d01293641d9ee2388014c615e4b5b11686\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://406837142fcb3b5b4c1507e78590dd1db265fe39207f53b372df2b161dea3f8b\",\"dweb:/ipfs/QmXRj5jBmfWRkUWzZSPn5wB7u5iHGGJkBVbuRRLBFuVJ96\"]},\"src/utils/WebAuthnP256.sol\":{\"keccak256\":\"0x26b2e618fffe1bd28e6e92815364d3286d673d0d722cfc0181575e2f97686def\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51d3ddc5fb4fe4150207b989ac8434d61752072cc698d32dc05cb6247db4be2f\",\"dweb:/ipfs/QmWPA77zXsZJUTVfkcenfzcmojgadMsnEEYMFB8DbXyJdn\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.28+commit.7893614a" },
    "language": "Solidity",
    "output": {
      "abi": [
        { "inputs": [], "type": "error", "name": "AccountNotFound" },
        { "inputs": [], "type": "error", "name": "InvalidAuthority" },
        { "inputs": [], "type": "error", "name": "InvalidSignature" },
        { "inputs": [], "type": "error", "name": "KeyExpired" },
        { "inputs": [], "type": "error", "name": "KeyNotAuthorized" },
        { "inputs": [], "stateMutability": "payable", "type": "fallback" },
        {
          "inputs": [
            {
              "internalType": "struct ECDSA.PublicKey",
              "name": "publicKey",
              "type": "tuple",
              "components": [
                { "internalType": "uint256", "name": "x", "type": "uint256" },
                { "internalType": "uint256", "name": "y", "type": "uint256" }
              ]
            },
            {
              "internalType": "enum ExperimentDelegation.KeyType",
              "name": "keyType",
              "type": "uint8"
            },
            { "internalType": "uint256", "name": "expiry", "type": "uint256" },
            {
              "internalType": "struct ECDSA.RecoveredSignature",
              "name": "signature",
              "type": "tuple",
              "components": [
                { "internalType": "uint256", "name": "r", "type": "uint256" },
                { "internalType": "uint256", "name": "s", "type": "uint256" },
                { "internalType": "uint8", "name": "yParity", "type": "uint8" }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorize",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "publicKeyIndex",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "calls", "type": "bytes" },
            {
              "internalType": "struct ECDSA.Signature",
              "name": "signature",
              "type": "tuple",
              "components": [
                { "internalType": "uint256", "name": "r", "type": "uint256" },
                { "internalType": "uint256", "name": "s", "type": "uint256" }
              ]
            },
            {
              "internalType": "struct WebAuthnP256.Metadata",
              "name": "metadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "authenticatorData",
                  "type": "bytes"
                },
                {
                  "internalType": "string",
                  "name": "clientDataJSON",
                  "type": "string"
                },
                {
                  "internalType": "uint16",
                  "name": "challengeIndex",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "typeIndex",
                  "type": "uint16"
                },
                {
                  "internalType": "bool",
                  "name": "userVerificationRequired",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "uint32",
              "name": "publicKeyIndex",
              "type": "uint32"
            },
            { "internalType": "bool", "name": "prehash", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestKeyIndex",
          "outputs": [
            { "internalType": "uint256", "name": "keyIndex", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "keys",
          "outputs": [
            { "internalType": "bool", "name": "authorized", "type": "bool" },
            { "internalType": "uint256", "name": "expiry", "type": "uint256" },
            {
              "internalType": "enum ExperimentDelegation.KeyType",
              "name": "keyType",
              "type": "uint8"
            },
            {
              "internalType": "struct ECDSA.PublicKey",
              "name": "publicKey",
              "type": "tuple",
              "components": [
                { "internalType": "uint256", "name": "x", "type": "uint256" },
                { "internalType": "uint256", "name": "y", "type": "uint256" }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "transactions", "type": "bytes" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multiSend"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nonce",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ECDSA.PublicKey",
              "name": "publicKey",
              "type": "tuple",
              "components": [
                { "internalType": "uint256", "name": "x", "type": "uint256" },
                { "internalType": "uint256", "name": "y", "type": "uint256" }
              ]
            },
            {
              "internalType": "enum ExperimentDelegation.KeyType",
              "name": "keyType",
              "type": "uint8"
            },
            { "internalType": "uint256", "name": "expiry", "type": "uint256" },
            { "internalType": "uint256", "name": "keyIndex", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "recoverAccount"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "publicKeyIndex",
              "type": "uint32"
            },
            {
              "internalType": "struct ECDSA.RecoveredSignature",
              "name": "signature",
              "type": "tuple",
              "components": [
                { "internalType": "uint256", "name": "r", "type": "uint256" },
                { "internalType": "uint256", "name": "s", "type": "uint256" },
                { "internalType": "uint8", "name": "yParity", "type": "uint8" }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revoke"
        },
        { "inputs": [], "stateMutability": "payable", "type": "receive" }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "authorize((uint256,uint256),uint8,uint256,(uint256,uint256,uint8))": {
            "params": {
              "expiry": "- The Unix timestamp at which the key expires.",
              "keyType": "- The type of key. 0 = P256, 1 = WebAuthn-P256, 2 = WebCrypto-P256.",
              "publicKey": "- The public key to authorize.",
              "signature": "- EOA secp256k1 signature over the public key."
            }
          },
          "execute(bytes,(uint256,uint256),(bytes,string,uint16,uint16,bool),uint32,bool)": {
            "params": {
              "calls": "- The calls to execute.",
              "metadata": "- The WebAuthn metadata.",
              "prehash": "- Whether to SHA-256 hash the digest.",
              "publicKeyIndex": "- The index of the authorized public key to use.",
              "signature": "- The WebAuthn-wrapped P256 signature over the calls: `p256.sign(keccak256(nonce ‖ calls))`."
            }
          },
          "multiSend(bytes)": {
            "details": "Sends multiple transactions and reverts all if one fails.",
            "params": {
              "transactions": "Encoded transactions. Each transaction is encoded as a packed bytes of                     operation has to be uint8(0) in this version (=> 1 byte),                     to as a address (=> 20 bytes),                     value as a uint256 (=> 32 bytes),                     data length as a uint256 (=> 32 bytes),                     data as bytes.                     see abi.encodePacked for more information on packed encoding"
            }
          },
          "recoverAccount((uint256,uint256),uint8,uint256,uint256)": {
            "params": {
              "expiry": "Expiry for the new key",
              "keyType": "New key type",
              "publicKey": "New public key"
            }
          },
          "revoke(uint32,(uint256,uint256,uint8))": {
            "params": {
              "publicKeyIndex": "- The index of the public key to revoke.",
              "signature": "- EOA secp256k1 signature over the public key index."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "authorize((uint256,uint256),uint8,uint256,(uint256,uint256,uint8))": {
            "notice": "Authorizes a new public key on behalf of the Authority, provided the Authority's signature."
          },
          "execute(bytes,(uint256,uint256),(bytes,string,uint16,uint16,bool),uint32,bool)": {
            "notice": "Executes a set of calls on behalf of the Authority, provided a WebAuthn-wrapped P256 signature over the calls, the WebAuthn metadata, and an invoker index."
          },
          "keys(uint256)": {
            "notice": "List of keys associated with the Authority."
          },
          "multiSend(bytes)": {
            "notice": "The code is for most part the same as the normal MultiSend (to keep compatibility),         but reverts if a transaction tries to use a delegatecall.This method is payable as delegatecalls keep the msg.value from the previous call         If the calling method (e.g. execTransaction) received ETH this would revert otherwise"
          },
          "nonce()": { "notice": "Internal nonce used for replay protection." },
          "recoverAccount((uint256,uint256),uint8,uint256,uint256)": {
            "notice": "Verify a self proofIf proof is valid, revoke specified key and authorize new key"
          },
          "revoke(uint32,(uint256,uint256,uint8))": {
            "notice": "Revokes an authorized public key on behalf of the Authority, provided the Authority's signature."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "forge-std/=lib/forge-std/src/",
        "self/=lib/self/",
        "solady/=lib/solady/src/",
        "src:forge-std/=lib/forge-std/src/",
        "src:self/=lib/self/contracts/",
        "src:solady/=lib/solady/src/"
      ],
      "optimizer": { "enabled": false, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "src/ExperimentDelegation.sol": "ExperimentDelegation"
      },
      "evmVersion": "prague",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/solady/src/utils/Base64.sol": {
        "keccak256": "0x07dcf983a86bc961e4cc0b57a2cfc3e46b20a50fed9b2092c7497e5fe3715a93",
        "urls": [
          "bzz-raw://65c6c0a8a29cfc5b757abe84635c83e62a177a48c2ad0be24de6b0fba1a60ea2",
          "dweb:/ipfs/QmYuYwxHiBoUt6vaLTLbs2bZamRzqrTfA4BsNZ1TApTfrm"
        ],
        "license": "MIT"
      },
      "src/ExperimentDelegation.sol": {
        "keccak256": "0x347a93294d27ef07a838de51cab72c45888c0867d7c1185e4cd13b810e6fef2d",
        "urls": [
          "bzz-raw://a794709ce5db4bc569d71cf769b88a1fe0b55f126791e0f21caebcddbe487c1a",
          "dweb:/ipfs/QmUdF3VRyFf1vRUmZux9JYdaPskXELVavcMXLkQbWhLA2U"
        ],
        "license": "MIT"
      },
      "src/utils/ECDSA.sol": {
        "keccak256": "0x14a31e9a4efb985d00c8f4d1f0d4d9a99eef64e88addcf563b0e93a0ddc525fa",
        "urls": [
          "bzz-raw://9fc74e53f36bf2a0f484115dc28006c93716b09ad9b9a33c2034b6a58e0f6feb",
          "dweb:/ipfs/QmTNp1QKavYLKFRpUCKCvLrqPNLf2hmgTFXoVonCfnKEuN"
        ],
        "license": "MIT"
      },
      "src/utils/MultiSend.sol": {
        "keccak256": "0x82d9281eb69e1fc9d4c9e418f90a2627ff928c4f7c32e993fd55a68daf999f20",
        "urls": [
          "bzz-raw://ca8e8c7aafe6fb97506e761f8894567ed8206dd45162164cd1b0a3009a298139",
          "dweb:/ipfs/QmcdnPgmU8jPLvPRkbUtnKZjunzG2DWtLKET1mHD5dwM1T"
        ],
        "license": "MIT"
      },
      "src/utils/P256.sol": {
        "keccak256": "0xe533cf68650f27bf70511494ac1955d01293641d9ee2388014c615e4b5b11686",
        "urls": [
          "bzz-raw://406837142fcb3b5b4c1507e78590dd1db265fe39207f53b372df2b161dea3f8b",
          "dweb:/ipfs/QmXRj5jBmfWRkUWzZSPn5wB7u5iHGGJkBVbuRRLBFuVJ96"
        ],
        "license": "MIT"
      },
      "src/utils/WebAuthnP256.sol": {
        "keccak256": "0x26b2e618fffe1bd28e6e92815364d3286d673d0d722cfc0181575e2f97686def",
        "urls": [
          "bzz-raw://51d3ddc5fb4fe4150207b989ac8434d61752072cc698d32dc05cb6247db4be2f",
          "dweb:/ipfs/QmWPA77zXsZJUTVfkcenfzcmojgadMsnEEYMFB8DbXyJdn"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 1
}
